// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using Student.Repository;
using System;

namespace StudentApi.Migrations
{
    [DbContext(typeof(StudentDBContext))]
    [Migration("20181015175026_mysqlstudent")]
    partial class mysqlstudent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Student.Repository.StudentAddress", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<long?>("AddressTypeId");

                    b.Property<long?>("CanShare");

                    b.Property<long?>("City");

                    b.Property<long?>("Country");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<long?>("IsActive");

                    b.Property<string>("POBox");

                    b.Property<long?>("State");

                    b.Property<long?>("StudentId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("AddressId");

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("Student.Repository.StudentContact", b =>
                {
                    b.Property<long>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CanShare");

                    b.Property<string>("ContactNo");

                    b.Property<long?>("ContactTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<long?>("Priority");

                    b.Property<long?>("StudentId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<long?>("isActive");

                    b.HasKey("ContactId");

                    b.ToTable("StudentContact");
                });

            modelBuilder.Entity("Student.Repository.StudentGeneral", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ApplicationNo");

                    b.Property<long?>("CanShare");

                    b.Property<long?>("CountryOfBirthId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<long?>("GenderId");

                    b.Property<long?>("MaritalStatusId");

                    b.Property<long?>("NationalityId");

                    b.Property<string>("PlaceOfBirth");

                    b.Property<string>("StudentName");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("StudentId");

                    b.ToTable("StudentGeneral");
                });

            modelBuilder.Entity("Student.Repository.StudentIdentity", b =>
                {
                    b.Property<long>("IdentityId")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CanShare");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("IdentityExpiryDate");

                    b.Property<DateTime?>("IdentityIssueDate");

                    b.Property<string>("IdentityNumber");

                    b.Property<long?>("IdentityTypeId");

                    b.Property<long?>("IsActive");

                    b.Property<string>("IssuingAuthority");

                    b.Property<long?>("StudentId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("IdentityId");

                    b.ToTable("StudentIdentity");
                });
#pragma warning restore 612, 618
        }
    }
}
